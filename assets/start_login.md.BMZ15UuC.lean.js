import{_ as a,c as i,a1 as t,o as n}from"./chunks/framework.__YBB7Bi.js";const c=JSON.parse('{"title":"1.1 登录接口文档","description":"","frontmatter":{},"headers":[],"relativePath":"start/login.md","filePath":"start/login.md"}'),p={name:"start/login.md"};function e(l,s,h,k,o,d){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="_1-1-登录接口文档" tabindex="-1">1.1 登录接口文档 <a class="header-anchor" href="#_1-1-登录接口文档" aria-label="Permalink to &quot;1.1 登录接口文档&quot;">​</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>为了避免刷量导致的服务可用性（甚至服务中断）和钱包的可用性下降很多，进而间接影响用户体验，我们强烈建议对登录数据进行检查。</p></div><h2 id="登录" tabindex="-1">登录 <a class="header-anchor" href="#登录" aria-label="Permalink to &quot;登录&quot;">​</a></h2><p>API 接口地址:</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /api/auth/login</span></span></code></pre></div><p>客户端需要发送的数据为</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;identifier&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;客户端识别码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>识别码长度为 19 个字符，共分为四段。格式为：<code>XXXX-XXXX-XXXX-XXXX</code>。</p><p>我们需要对客户端的识别码进行格式检查，确定是否有四段且总长度应该等于 19。</p><p>如果检查通过，服务端应返回 201 响应，响应格式如下。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">201</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;access_token&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;访问令牌&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;expire_in&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">172800</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果没有通过检查，服务端应返回 400 响应。</p><p>如果客户端已被封禁，服务端应返回 403 响应。</p><p>默认最后一次签发的登录令牌为有效令牌，其他令牌应视为无效令牌。</p>`,14)]))}const E=a(p,[["render",e]]);export{c as __pageData,E as default};
